//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALServices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ASGWebLogEntities : DbContext
    {
        public ASGWebLogEntities()
            : base("name=ASGWebLogEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<NLog_Error> NLog_Error { get; set; }
    
        public virtual ObjectResult<GetLoggingData_Result> GetLoggingData(Nullable<bool> isSearch, string startDt, string endDt, string level, string userId, Nullable<int> id, Nullable<int> pageNo, Nullable<int> totalRows)
        {
            var isSearchParameter = isSearch.HasValue ?
                new ObjectParameter("IsSearch", isSearch) :
                new ObjectParameter("IsSearch", typeof(bool));
    
            var startDtParameter = startDt != null ?
                new ObjectParameter("StartDt", startDt) :
                new ObjectParameter("StartDt", typeof(string));
    
            var endDtParameter = endDt != null ?
                new ObjectParameter("EndDt", endDt) :
                new ObjectParameter("EndDt", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var totalRowsParameter = totalRows.HasValue ?
                new ObjectParameter("TotalRows", totalRows) :
                new ObjectParameter("TotalRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoggingData_Result>("GetLoggingData", isSearchParameter, startDtParameter, endDtParameter, levelParameter, userIdParameter, idParameter, pageNoParameter, totalRowsParameter);
        }
    }
}
